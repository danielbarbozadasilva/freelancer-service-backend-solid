{
  "openapi": "3.0.0",
  "info": {
    "title": "Api Freelance",
    "description": "A API foi desenvolvida utilizando os princípios SOLID e TypeScript com NodeJs, ExpressJs e Banco de dados MongoDB. Documentação utilizando o Swagger. Testes unitários utilizando o Jest.",
    "contact": {
      "email": "daniel80barboza@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3011/v1",
      "description": "Api de teste"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "Logar usuário",
        "description": "Essa rota é responsável por autenticar o usuário",
        "tags": [
          "Autenticação"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid email or password."
          },
          "200": {
            "description": "Successfully authenticated user!"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Registrar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Register_User"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Cpf already exists.\nEmail already exists.\nUsername already exists."
          },
          "201": {
            "description": "User successfully created!"
          }
        }
      }
    },
    "/category": {
      "get": {
        "summary": "Listar categorias",
        "description": "Essa rota lista categorias",
        "tags": [
          "Categoria"
        ],
        "responses": {
          "200": {
            "description": "List all categories successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Categories_Product"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      },
      "post": {
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          }
        ],
        "summary": "Cadastrar categoria",
        "description": "Essa rota cadastra uma categoria",
        "tags": [
          "Categoria"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Register_Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category successfully created!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/category/{id}": {
      "get": {
        "summary": "Listar categoria pelo Id",
        "description": "Essa rota lista uma categoria",
        "tags": [
          "Categoria"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id da categoria",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List category successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Categories"
                }
              }
            }
          },
          "400": {
            "description": "Essa categoria não existe!"
          }
        }
      },
      "put": {
        "summary": "Atualizar categoria",
        "description": "Essa rota atualiza uma categoria",
        "tags": [
          "Categoria"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id da categoria",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Register_Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category successfully updated!"
          },
          "400": {
            "description": "Essa categoria não existe!"
          }
        }
      },
      "delete": {
        "summary": "Excluir categoria",
        "description": "Essa rota exclui uma categoria",
        "tags": [
          "Categoria"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id da categoria",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully!"
          },
          "400": {
            "description": "Essa categoria não existe!"
          }
        }
      }
    },
    "/rating/product/{id}": {
      "get": {
        "summary": "Listar avaliações pelo Id do produto",
        "description": "Essa rota lista as avaliações de um produto",
        "tags": [
          "Avaliação"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do produto",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List Rating successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_rating"
                }
              }
            }
          },
          "400": {
            "description": "Avaliação não existente!"
          }
        }
      }
    },
    "/rating": {
      "post": {
        "tags": [
          "Avaliação"
        ],
        "summary": "Cadastrar avaliação",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "Marcos",
                  "text": "Excelente",
                  "score": 5,
                  "productId": "659802bcfed9f7066576ca78",
                  "userId": "65883a7bc89918015e25e52f"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rating successfully created!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/rating/{id}": {
      "put": {
        "summary": "Listar avaliações pelo Id",
        "description": "Essa rota lista as avaliações pelo ID",
        "tags": [
          "Avaliação"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id da avaliação",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "Marcos",
                  "text": "Excelente",
                  "score": 5,
                  "productId": "659802bcfed9f7066576ca78",
                  "userId": "65883a7bc89918015e25e52f"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rating successfully Updated!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      },
      "delete": {
        "summary": "Deleta a avaliação pelo Id",
        "description": "Essa rota lista as avaliações pelo ID",
        "tags": [
          "Avaliação"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id da avaliação",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Rating deleted successfully!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/conversation": {
      "post": {
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          }
        ],
        "summary": "Criar uma conversa",
        "description": "Essa rota cria uma conversa",
        "tags": [
          "Conversa"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "isSeller": true,
                  "userId": "65883a7bc89918015e25e52e",
                  "to": "65883ab3c89918015e25e532",
                  "readBySeller": false,
                  "readByBuyer": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversation successfully created!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/conversation/userid/{id}/isseller/{isseller}": {
      "get": {
        "summary": "Listar conversa",
        "description": "Essa rota lista uma conversa",
        "tags": [
          "Conversa"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do usuário",
            "required": true
          },
          {
            "name": "isseller",
            "in": "path",
            "type": "boolean",
            "description": "Freelancer",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation successfully listed!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_conversation"
                }
              }
            }
          }
        }
      }
    },
    "/conversation/userId/{userId}/buyerId/{buyerId}": {
      "get": {
        "summary": "Listar conversa",
        "description": "Essa rota lista uma conversa entre o freelancer e o usuário",
        "tags": [
          "Conversa"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "integer",
            "description": "Id do usuário",
            "required": true
          },
          {
            "name": "buyerId",
            "in": "path",
            "type": "integer",
            "description": "Id do freelancer",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation successfully listed!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_conversation_Buyer"
                }
              }
            }
          }
        }
      }
    },
    "/conversation/{id}": {
      "put": {
        "summary": "Atualizar conversa",
        "description": "Essa rota atualiza uma conversa",
        "tags": [
          "Conversa"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id da conversa",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "isSeller": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversation successfully updated!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar produto",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "Ordenar por ordem alfabetica_a-z, alfabetica_z-a, price-crescente e price-decrescente",
            "type": "string",
            "example": "alfabetica_a-z"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Id da categoria",
            "type": "string",
            "example": "6591ac5bf9877e3170d90c48"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Id do usuário",
            "type": "string",
            "example": "65883ab3c89918015e25e532"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": " "
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "1000"
          }
        ],
        "responses": {
          "200": {
            "description": "List all services successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Products"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Produto"
        ],
        "summary": "Cadastrar produto",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "65883ab3c89918015e25e532"
                  },
                  "title": {
                    "type": "string",
                    "example": "Desenvolvedor Webddddd"
                  },
                  "description": {
                    "type": "string",
                    "example": "Experiência em Desenvolvedor Web"
                  },
                  "category": {
                    "type": "string",
                    "example": "6591ac5bf9877e3170d90c48"
                  },
                  "price": {
                    "type": "integer",
                    "example": "110"
                  },
                  "files": {
                    "type": "string",
                    "format": "binary"
                  },
                  "deliveryTime": {
                    "type": "integer",
                    "example": "7"
                  },
                  "features": {
                    "type": "string",
                    "example": "Desenvolvimento web,APIs RESTful,React,Node.js,Express"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Service successfully created!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar produto pelo Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do produto",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List all services successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_ProductsById"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Produto"
        ],
        "summary": "Atualizar produto",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "65883ab3c89918015e25e532"
                  },
                  "title": {
                    "type": "string",
                    "example": "Desenvolver API"
                  },
                  "description": {
                    "type": "string",
                    "example": "Experiência em desenvolvimento web full stack"
                  },
                  "category": {
                    "type": "string",
                    "example": "6591ac5bf9877e3170d90c48"
                  },
                  "price": {
                    "type": "integer",
                    "example": "50"
                  },
                  "files": {
                    "type": "string",
                    "format": "binary"
                  },
                  "deliveryTime": {
                    "type": "integer",
                    "example": "7"
                  },
                  "features": {
                    "type": "string",
                    "example": "Desenvolvimento web,APIs RESTful,React,Node.js,Express"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do produto",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Service successfully updated!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      },
      "delete": {
        "tags": [
          "Produto"
        ],
        "summary": "Deletar produto",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do produto",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted successfully!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/message/{id}": {
      "get": {
        "tags": [
          "Mensagem"
        ],
        "summary": "Listar mensagens pelo Id da conversa",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "conversationId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List message successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Messsage"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/message": {
      "post": {
        "tags": [
          "Mensagem"
        ],
        "summary": "Criar uma mensagem",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Params_Messsage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message successfully created!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Listar os usuários",
        "description": "Essa rota lista os usuários",
        "tags": [
          "Usuário"
        ],
        "responses": {
          "200": {
            "description": "Users successfully listed!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Users"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do usuário",
            "required": true
          }
        ],
        "summary": "Atualizar dados do Usuário (Cliente / Freelancer)",
        "description": "Essa rota atualiza os dados de um usuário",
        "tags": [
          "Usuário"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Register_User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully updated!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      },
      "get": {
        "summary": "Listar os usuários pelo Id",
        "description": "Essa rota lista o usuário pelo Id",
        "tags": [
          "Usuário"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do usuário",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User listed!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Users"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      },
      "delete": {
        "summary": "Excluir usuário",
        "description": "Essa rota exclui um usuário",
        "tags": [
          "Usuário"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do usuário",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/order": {
      "parameters": [
        {
          "name": "token",
          "in": "header",
          "type": "string",
          "description": "token",
          "required": true
        }
      ],
      "get": {
        "summary": "Listar os pedidos",
        "description": "Essa rota lista os pedidos",
        "tags": [
          "Pedido"
        ],
        "responses": {
          "200": {
            "description": "List all orders successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Orders"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/order/{id}": {
      "put": {
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Payment intent",
            "exemple": "pi_3OrgiFDlLXsk0gPs1UHz2bsx",
            "required": true
          }
        ],
        "summary": "Atualizar dados do pedido",
        "description": "Essa rota atualiza os dados de um pedido",
        "tags": [
          "Pedido"
        ],
        "responses": {
          "200": {
            "description": "User successfully updated!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/order/{id}/isSeller/{isSeller}": {
      "get": {
        "summary": "Listar o pedido pelo Id",
        "description": "Essa rota lista o pedido pelo Id",
        "tags": [
          "Pedido"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do usuário",
            "required": true
          },
          {
            "name": "isSeller",
            "in": "path",
            "type": "boolean",
            "description": "Usuário é freelancer (true/false)",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List order successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/List_Orders"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/order/create-payment-intent/{id}": {
      "post": {
        "summary": "Criar pedido",
        "description": "Essa rota cria um pedido",
        "tags": [
          "Pedido"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string",
            "description": "token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Id do produto",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "buyerId": "65a5002f9d9b340e62d233b4",
                  "description": "teste"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment intent successfully created!"
          },
          "400": {
            "description": "Unexpected error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Auth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "required": true,
            "example": "teste@gmail.com"
          },
          "password": {
            "type": "string",
            "required": true,
            "example": "teste"
          }
        }
      },
      "List_Auth": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          },
          "email": {
            "type": "string",
            "required": true
          },
          "cpf": {
            "type": "string",
            "required": true
          },
          "type": {
            "type": "integer",
            "required": true
          }
        }
      },
      "List_Products": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": true
          },
          "userId": {
            "type": "string",
            "required": true
          },
          "title": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "orders": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "title": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "price": {
                "type": "string",
                "required": true
              },
              "isCompleted": {
                "type": "boolean",
                "required": true
              },
              "status": {
                "type": "string",
                "required": true
              },
              "payment_intent": {
                "type": "string",
                "required": true
              },
              "createdAt": {
                "type": "string",
                "required": true
              }
            }
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "picture": {
                "type": "string",
                "required": true
              }
            }
          },
          "price": {
            "type": "integer",
            "required": true
          },
          "priceFormated": {
            "type": "string",
            "required": true
          },
          "images": {
            "type": "array",
            "required": true
          },
          "deliveryTime": {
            "type": "integer",
            "required": true
          },
          "features": {
            "type": "array",
            "required": true
          },
          "sales": {
            "type": "integer",
            "required": true
          },
          "rating": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "text": {
                "type": "string",
                "required": true
              },
              "score": {
                "type": "integer",
                "required": true
              },
              "productId": {
                "type": "string",
                "required": true
              },
              "userId": {
                "type": "string",
                "required": true
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "username": {
                "type": "string",
                "required": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "cpf": {
                "type": "string",
                "required": true
              },
              "birthDate": {
                "type": "string",
                "required": true
              },
              "picture": {
                "type": "string",
                "required": true
              },
              "country": {
                "type": "string",
                "required": true
              },
              "phone": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "permissions": {
                "type": "array",
                "required": false
              },
              "isSeller": {
                "type": "boolean",
                "required": true
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "username": {
                "type": "string",
                "required": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "cpf": {
                "type": "string",
                "required": true
              },
              "birthDate": {
                "type": "string",
                "required": true
              },
              "picture": {
                "type": "string",
                "required": true
              },
              "country": {
                "type": "string",
                "required": true
              },
              "phone": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "permissions": {
                "type": "array",
                "required": false
              },
              "isSeller": {
                "type": "boolean",
                "required": true
              }
            }
          }
        }
      },
      "Register_Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "required": true,
            "example": "teste"
          },
          "description": {
            "type": "string",
            "required": true,
            "example": "teste"
          },
          "files": {
            "type": "string",
            "required": true,
            "format": "binary"
          }
        }
      },
      "List_Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          },
          "username": {
            "type": "string",
            "required": true
          },
          "email": {
            "type": "string",
            "required": true
          },
          "cpf": {
            "type": "string",
            "required": true
          },
          "birthDate": {
            "type": "string",
            "required": true
          },
          "picture": {
            "type": "string",
            "required": true
          },
          "country": {
            "type": "string",
            "required": true
          },
          "phone": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "permissions": {
            "type": "array",
            "required": false
          },
          "isSeller": {
            "type": "boolean",
            "required": true
          }
        }
      },
      "List_ProductsById": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": true
          },
          "title": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "picture": {
                "type": "string",
                "required": true
              }
            }
          },
          "price": {
            "type": "integer",
            "required": true
          },
          "priceFormated": {
            "type": "string",
            "required": true
          },
          "images": {
            "type": "array",
            "required": true
          },
          "deliveryTime": {
            "type": "integer",
            "required": true
          },
          "features": {
            "type": "array",
            "required": true
          },
          "sales": {
            "type": "integer",
            "required": true
          },
          "userId": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "username": {
                "type": "string",
                "required": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "cpf": {
                "type": "string",
                "required": true
              },
              "birthDate": {
                "type": "string",
                "required": true
              },
              "picture": {
                "type": "string",
                "required": true
              },
              "country": {
                "type": "string",
                "required": true
              },
              "phone": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "permissions": {
                "type": "array",
                "required": false
              },
              "isSeller": {
                "type": "boolean",
                "required": true
              }
            }
          }
        }
      },
      "List_Orders": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": true
          },
          "title": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "price": {
            "type": "string",
            "required": true
          },
          "isCompleted": {
            "type": "boolean",
            "required": true
          },
          "status": {
            "type": "string",
            "required": true
          },
          "payment_intent": {
            "type": "string",
            "required": true
          },
          "createdAt": {
            "type": "string",
            "required": true
          },
          "product": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "title": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "category": {
                "type": "string",
                "required": true
              },
              "deliveryTime": {
                "type": "integer",
                "required": true
              },
              "features": {
                "type": "array",
                "required": true
              },
              "rating": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "required": true
                  },
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "text": {
                    "type": "string",
                    "required": true
                  },
                  "score": {
                    "type": "string",
                    "required": true
                  },
                  "productId": {
                    "type": "string",
                    "required": false
                  },
                  "userId": {
                    "type": "string",
                    "required": false
                  }
                }
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "username": {
                "type": "string",
                "required": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "cpf": {
                "type": "string",
                "required": true
              },
              "birthDate": {
                "type": "string",
                "required": true
              },
              "picture": {
                "type": "string",
                "required": true
              },
              "country": {
                "type": "string",
                "required": true
              },
              "phone": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "permissions": {
                "type": "array",
                "required": false
              },
              "isSeller": {
                "type": "boolean",
                "required": true
              }
            }
          },
          "buyer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "name": {
                "type": "string",
                "required": true
              },
              "username": {
                "type": "string",
                "required": true
              },
              "email": {
                "type": "string",
                "required": true
              },
              "cpf": {
                "type": "string",
                "required": true
              },
              "birthDate": {
                "type": "string",
                "required": true
              },
              "picture": {
                "type": "string",
                "required": true
              },
              "country": {
                "type": "string",
                "required": true
              },
              "phone": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "permissions": {
                "type": "array",
                "required": false
              },
              "isSeller": {
                "type": "boolean",
                "required": true
              }
            }
          }
        }
      },
      "List_conversation_Buyer": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65e6f28c6d4a0222d0f51f67"
          },
          "id": {
            "type": "string",
            "example": "65883a7bc89918015e25e52e65883ab3c89918015e25e532"
          },
          "sellerId": {
            "type": "string",
            "example": "65883a7bc89918015e25e52e"
          },
          "buyerId": {
            "type": "string",
            "example": "65883ab3c89918015e25e532"
          },
          "readBySeller": {
            "type": "boolean",
            "example": true
          },
          "readByBuyer": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "example": "2024-03-05T10:23:08.923Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-03-05T10:23:08.923Z"
          },
          "__v": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "List_conversation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65e6f28c6d4a0222d0f51f67"
          },
          "id": {
            "type": "string",
            "example": "65883a7bc89918015e25e52e65883ab3c89918015e25e532"
          },
          "sellerId": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "65883a7bc89918015e25e52e"
              },
              "name": {
                "type": "string",
                "example": "Daniel Silva"
              },
              "username": {
                "type": "string",
                "example": "daniel123"
              },
              "email": {
                "type": "string",
                "example": "daniel80barboza@gmail.com"
              },
              "cpf": {
                "type": "string",
                "example": "333.333.333-33"
              },
              "birthDate": {
                "type": "string",
                "example": "2000-03-01T05:36:40.303Z"
              },
              "picture": {
                "type": "string",
                "example": "files-1704052453988.jpg"
              },
              "country": {
                "type": "string",
                "example": "brasil"
              },
              "phone": {
                "type": "string",
                "example": "(21)99999-9999"
              },
              "description": {
                "type": "string",
                "example": "Escritor, Tradutor, Redator, Especialista em SEO, Gestor de Tráfego e Marketing Digital."
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "freelancer"
                  ]
                },
                "isSeller": {
                  "type": "boolean",
                  "example": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2021-01-28T06:39:34.330Z"
                }
              }
            }
          },
          "buyerId": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "65883ab3c89918015e25e532"
              },
              "name": {
                "type": "string",
                "example": "Daniel Barboza"
              },
              "username": {
                "type": "string",
                "example": "daniel098"
              },
              "email": {
                "type": "string",
                "example": "danielbarboza58@hotmail.com"
              },
              "cpf": {
                "type": "string",
                "example": "111.222.333-33"
              },
              "birthDate": {
                "type": "string",
                "example": "2001-03-01T05:36:40.404Z"
              },
              "picture": {
                "type": "string",
                "example": "files-1704052453989.jpg"
              },
              "country": {
                "type": "string",
                "example": "brasil"
              },
              "phone": {
                "type": "string",
                "example": "(21)99999-9999"
              },
              "description": {
                "type": "string",
                "example": "Sou graduado em Tecnologia da informação, com mais de 10 anos de experiência no desenvolvimento de sistemas."
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "freelancer"
                  ]
                },
                "isSeller": {
                  "type": "boolean",
                  "example": true
                },
                "readBySeller": {
                  "type": "boolean",
                  "example": true
                },
                "readByBuyer": {
                  "type": "boolean",
                  "example": false
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-03-05T10:23:08.923Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-03-05T10:23:08.923Z"
                },
                "__v": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "List_rating": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          },
          "text": {
            "type": "string",
            "required": true
          },
          "score": {
            "type": "string",
            "required": true
          },
          "productId": {
            "type": "string",
            "required": false
          },
          "userId": {
            "type": "string",
            "required": false
          }
        }
      },
      "List_Categories": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "picture": {
            "type": "string",
            "required": true
          }
        }
      },
      "List_Categories_Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "picture": {
            "type": "string",
            "required": true
          },
          "product": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "required": true
              },
              "title": {
                "type": "string",
                "required": true
              },
              "description": {
                "type": "string",
                "required": true
              },
              "category": {
                "type": "string",
                "required": true
              },
              "deliveryTime": {
                "type": "integer",
                "required": true
              },
              "features": {
                "type": "array",
                "required": true
              }
            }
          }
        }
      },
      "Params_Messsage": {
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string",
            "required": true,
            "example": "65e9bcd38eed24488db56bbb"
          },
          "userId": {
            "type": "string",
            "required": true,
            "example": "65883ab3c89918015e25e532"
          },
          "description": {
            "type": "string",
            "required": true,
            "example": "Olá!"
          },
          "readBySeller": {
            "type": "boolean",
            "required": true,
            "example": true
          },
          "readByBuyer": {
            "type": "boolean",
            "required": true,
            "example": true
          },
          "lastMessage": {
            "type": "string",
            "required": true,
            "example": "Olá!"
          }
        }
      },
      "List_Messsage": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "required": true,
            "example": "65e852dde4bbc83846c55c41"
          },
          "conversationId": {
            "type": "string",
            "required": true,
            "example": "65e852dde4bbc83846c55c3f"
          },
          "userId": {
            "type": "string",
            "required": true,
            "example": "65883a7bc89918015e25e52e"
          },
          "description": {
            "type": "string",
            "required": true,
            "example": "Olá! Bem vindo ao chat, aqui você pode interagir melhor com o Freelancer e tirar todas as suas dúvidas."
          },
          "createdAt": {
            "type": "string",
            "required": true,
            "example": "2024-03-06T11:26:21.151Z"
          },
          "updatedAt": {
            "type": "string",
            "required": true,
            "example": "2024-03-06T11:26:21.151Z"
          },
          "__v": {
            "type": "number",
            "required": true,
            "example": 0
          }
        }
      },
      "Register_User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "required": true,
            "example": "teste"
          },
          "username": {
            "type": "string",
            "required": true,
            "example": "teste001"
          },
          "email": {
            "type": "string",
            "required": true,
            "example": "teste@gmail.com"
          },
          "cpf": {
            "type": "string",
            "required": true,
            "example": "141.444.444-44"
          },
          "birthDate": {
            "type": "string",
            "required": true,
            "example": "2000-03-01T05:36:40.303Z"
          },
          "files": {
            "type": "string",
            "required": true,
            "format": "binary"
          },
          "country": {
            "type": "string",
            "required": true,
            "example": "brasil"
          },
          "phone": {
            "type": "string",
            "required": true,
            "example": "(21)99999-9999"
          },
          "description": {
            "type": "string",
            "required": true,
            "example": "Desenvolvedor web"
          },
          "password": {
            "type": "string",
            "required": true,
            "example": "teste"
          },
          "isSeller": {
            "type": "boolean",
            "required": true,
            "example": false
          }
        }
      }
    },
    "securityDefinitions": {
      "JWT": {
        "description": "JWT token",
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}